{# @var settings \vaersaagod\geomate\models\Settings #}

{% set downloadUrlsMissing = not settings.countryDbDownloadUrl or not settings.cityDbDownloadUrl %}
<div class="geomate-utility">
    {% if downloadUrlsMissing %}
        <p class="error geomate-utility__error" data-geomate-error>
            Database download URLs have not been configured. 
        </p>
    {% endif %}
    
    {% if not hasDatabase %}
        <p class="error geomate-utility__error" data-geomate-error>
            No database found! Please check the settings below, and download the GeoIP2 databases.
        </p>
    {% else %}
        <p class="success geomate-utility__success" data-geomate-success>
            Database exists!
            {% if dbTimestamp %} It was last updated {{ dbTimestamp | date('M j, Y @ H:i') }}{% endif %}
        </p>
    {% endif %}
    
    <div class="geomate-utility__settings geomate-utility__block">
        <p>
            Based on your settings, we found the following information:
        </p>

        <table class="data fullwidth">
            <tbody>
            <tr>
                <th class="light">Databases will be stored in:</th>
                <td>{{ settings.dbPath }}</td>
            </tr>
            <tr>
                <th class="light">Country database filename:</th>
                <td>{{ settings.countryDbFilename }}</td>
            </tr>
            <tr>
                <th class="light">City database filename:</th>
                <td>{{ settings.cityDbFilename }}</td>
            </tr>
            <tr>
                <th class="light">Country database download URL:</th>
                <td>{{ settings.countryDbDownloadUrl }}</td>
            </tr>
            <tr>
                <th class="light">City database download URL:</th>
                <td>{{ settings.cityDbDownloadUrl }}</td>
            </tr>
            </tbody>
        </table>

        <p>
            Make sure this information is correct. If you use atomic deploys, it's a good idea 
            to have the database storage path in a shared location, or else the database would 
            have to be downloaded every time you do a new deploy.
        </p>

    </div>
    
    {% if downloadUrlsMissing %}
        <div class="geomate-utility__block">
            <p><em>You need to add download URLs to be able to update your databases.</em></p>
        </div>
    {% else %}
        <div class="geomate-utility__update geomate-utility__block">
            <h2>Update database</h2>
            {% set updateWarning = (memoryLimit | replace('G', '000') | replace('M', '')) < 256 %}
            
            {% if updateWarning %}
                <p>
                    <em>Quite a bit of memory is needed to download and unzip the databases. You've currently allocated {{ memoryLimit }}, 
                        which is less than the recommended amount (256M). This may lead to the database update failing.</em>
                </p>
            {% endif %}
            
            <p>
                <button class="geomate-utility__btn btn submit" data-update-url="{{ actionUrl('geomate/database/update-database', { returnResult: '1' }) }}" data-geomate-update-btn>Update {{ updateWarning ? 'anyway' : 'now' }}</button>
                <span class="spinner invisible" data-geomate-update-spinner></span>
            </p>
            <p class="light" data-geomate-update-status></p>
        </div>
    
        <div class="geomate-utility__cron geomate-utility__block">
            <h2>Updating the database via action URL or console command</h2>
            <p>You can also update the database accessing the controller action URL or console command, for instance via a cron job.</p>

            <p>
                <strong>Action URL:</strong> <code>{{ actionUrl('geomate/database/update-database') }}</code><br>
                <strong>Console command:</strong> <code>php {{ alias('@root') }}/craft geomate/database/update-database</code>
            </p>
            
            {#
                When bumping the requirements to 3.6, we can do:
                
                {% from '_includes/forms' import copyTextField %}
                
                {{ copyTextField({
                    label: 'Action URL',
                    value: actionUrl('geomate/database/update-database')
                }) }}
    
                {{ copyTextField({
                    label: 'Console command',
                    value: "php #{alias('@root')}/craft geomate/database/update-database"
                }) }}
            #}
        </div>

    {% endif %}
    
</div>
